/*
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 error_code
int32 SUCCESSFUL = 0
int32 INVALID_GOAL = -1
int32 INVALID_JOINTS = -2
int32 OLD_HEADER_TIMESTAMP = -3
int32 PATH_TOLERANCE_VIOLATED = -4
int32 GOAL_TOLERANCE_VIOLATED = -5

# Human readable description of the error code. Contains complementary
# information that is especially useful when execution fails, for instance:
# - INVALID_GOAL: The reason for the invalid goal (e.g., the requested
#   trajectory is in the past).
# - INVALID_JOINTS: The mismatch between the expected controller joints
#   and those provided in the goal.
# - PATH_TOLERANCE_VIOLATED and GOAL_TOLERANCE_VIOLATED: Which joint
#   violated which tolerance, and by how much.
string error_string

*/

using Newtonsoft.Json;
using CSI.ROS.Messages.Standard;

namespace CSI.ROS.Messages.Control
{
    public class FollowJointTrajectoryResult : Message
    {
        [JsonIgnore]
        public const string RosMessageName = "control_msgs/FollowJointTrajectoryResult";
        /*
        public Int32 error_code;
        public Int32 SUCCESSFUL = 0;
        public Int32 INVALID_GOAL = -1;
        public Int32 INVALID_JOINTS = -2;
        public Int32 OLD_HEADER_TIMESTAMP = -3;
        public Int32 PATH_TOLERANCE_VIOLATED = -4;
        public Int32 GOAL_TOLERANCE_VIOLATED = -5;
        public String error_string;
        */
        public Int32 error_code;
        public Int32 SUCCESSFUL;
        public Int32 INVALID_GOAL;
        public Int32 INVALID_JOINTS;
        public Int32 OLD_HEADER_TIMESTAMP;
        public Int32 PATH_TOLERANCE_VIOLATED;
        public Int32 GOAL_TOLERANCE_VIOLATED;
        public String error_string;

        // Create an unpopulated message
        public FollowJointTrajectoryResult()
        {
            error_code = new Int32();

            SUCCESSFUL = new Int32();
            SUCCESSFUL.data = 0;
            INVALID_GOAL = new Int32();
            INVALID_GOAL.data = -1;
            INVALID_JOINTS = new Int32();
            INVALID_JOINTS.data = -2;
            OLD_HEADER_TIMESTAMP = new Int32();
            OLD_HEADER_TIMESTAMP.data = -3;
            PATH_TOLERANCE_VIOLATED = new Int32();
            PATH_TOLERANCE_VIOLATED.data = -4;
            GOAL_TOLERANCE_VIOLATED = new Int32();
            GOAL_TOLERANCE_VIOLATED.data = -5;
            error_string = new String();
        }
    }
}

